(function($) {
'use strict';

$(function(){
	
/**
*  * reg_id: 4794300
* staff_id: 419
* 
**/
$.fn.caret = function(begin, end) {
	var range;

	if (this.length === 0 || this.is(':hidden')) {
		return;
	}

	if ($.type(begin) === 'number') {
		end = ($.type(end) === 'number') ? end : begin;
		return this.each(function() {
			if (this.setSelectionRange) {
				this.setSelectionRange(begin, end);
			} else if (this.createTextRange) {
				range = this.createTextRange();
				range.collapse(true);
				range.moveEnd('character', end);
				range.moveStart('character', begin);
				range.select();
			}
		});
	} else {
		if (this[0].setSelectionRange) {
			begin = this[0].selectionStart;
			end = this[0].selectionEnd;
		} else if (document.selection && document.selection.createRange) {
			range = document.selection.createRange();
			begin = 0 - range.duplicate().moveStart('character', -100000);
			end = begin + range.text.length;
		}
		return {
			begin: begin,
			end: end
		};
	}
};

$.keys = {};

$.KEYS = {
	Digit: [48, 57],
	Backspace: 8,
	Comma: 44,
	Point: 46
};

$.each($.KEYS, function(key, value) {
	$.keys['is' + key] = function(code) {
		if ($.isArray(value)) {
			return (value[0] <= code && code <= value[1]);
		} else {
			return value === code;
		}
	};
});

$.fn.getVal = function() {
	var values = [];

	this.each(function() {
		var v = $(this).val();
		v = parseFloat(v);
		if (!v) {
			v = 0;
		}
		values.push(v);
	});
	return values;
};

$.fn.keyFilter = function(selector, settings) {
	settings = $.extend({
		type: 'int',
		def: '',
		callback: $.noop
	}, settings);

	return this.each(function() {
		var $this = $(this);

		$this.on('keypress', selector, function(e) {
			var caret, isBackspace, isDigit, isPoint, val, input = $(this);

			if (e.shiftKey || e.ctrlKey) {
				return false;
			}

			if (e.which === 0) {
				return true;
			}

			isDigit = $.keys.isDigit(e.which);
			isPoint = $.keys.isPoint(e.which) || $.keys.isComma(e.which);
			isBackspace = $.keys.isBackspace(e.which);

			if (!isDigit && !isPoint && !isBackspace) {
				return false;
			}

			if (settings.type === 'int' && isPoint) {
				return false;
			}

			val = input.val().replace(/,/g, '.');
			caret = input.caret();
			input.val(val);
			input.caret(caret.begin, caret.end);

			if (isPoint && val.indexOf('.') !== -1) {
				return false;
			}
		});

		$this.on('keyup', selector, function() {
			var input = $(this);
			settings.callback(input);
		});

		$this.on('blur', selector, function() {
			var input = $(this);
			if (input.val() === '') {
				input.val(settings.def);
				settings.callback(input);
			}
		});
	});
};



	function calculator_segment(a){
		var wr = $(a).closest('.js-calculator-segment'),
			tr = wr.find('.js-calculator-segment-table-tr'),
			sq = $(a).val() ? parseFloat( $(a).val() ) : parseFloat( $(a).data('def') );
		
		$(document).keyFilter('.js-calculator-segment-input');
			
		tr.each(function(){
			var $this = $(this),
				$price = parseFloat( $this.data('price') ),
				$consumption = parseFloat( $this.data('consumption') ),
				$consumption_total_wr = $this.find('.js-calculator-segment-consumption'),
				$total_wr = $this.find('.js-calculator-segment-total'),
				$consumption_total = 0,
				$total = 0;
			$consumption_total = sq * $consumption;
			$total = $consumption_total * $price;
			
			$consumption_total_wr.html( parseInt( $consumption_total ) );
			$total_wr.html( $total.toFixed(0).replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g, '$1 ') );
			$total_wr.data('max', $total );
		});
		var tr2 = tr = wr.find('.js-calculator-segment-table-tr'),
			s1Max = 0,
			s2Max = 0;
		
		tr2.each(function(){
			var $this = $(this),
				s1 = parseInt( $this.find('.js-calculator-segment-total').data('max') );
			if( s1Max < s1 ){
				s1Max = s1;
			}
		});
		
		var tr3 = tr = wr.find('.js-calculator-segment-table-tr'),
			s1Width = 65,
			s2Width = 25;
			
		tr3.each(function(){
			var $this = $(this),
				s1Width_ = 0,
				s1 = parseInt( $this.find('.js-calculator-segment-total').data('max') );
			
			s1Width_ = s1 / s1Max * 100;
			s1Width_ = s1Width * s1Width_ / 100;
			$this.find('.calculator-segment-table-td-5-s1').css({
				'width': s1Width_ + '%'
			})
		});
		
		wr.find('.js-calculator-segment-default').html( sq + ' м²' )
		
	}
	
	$('.js-calculator-segment-input')
		.on('change', function(){
			calculator_segment(this);
		})
		.on('keyup', function(){
			calculator_segment(this);
		})
		.trigger('change');
	
	$('.js-calculator-segment-btn').on('click', function(){
		
		var thisScrollBlockOffsetTop = $('.js-calculator-segment-table-wrap').offset().top;
		
		$('html, body').animate({
			scrollTop : thisScrollBlockOffsetTop
		}, 600, function() {
			
		});
		
		return false
	});
	
});

})(jQuery)